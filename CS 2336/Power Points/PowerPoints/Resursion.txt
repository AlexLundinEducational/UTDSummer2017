Summary

PowerPoint
1-37
Obj
To describe what a recursive method is and the benefits of using recursion (§18.1).
To develop recursive methods for recursive mathematical functions (§§18.2–18.3).
To explain how recursive method calls are handled in a call stack (§§18.2–18.3).
To solve problems using recursion (§18.4).
To use an overloaded helper method to derive a recursive method (§18.5).
To implement a selection sort using recursion (§18.5.1).
To implement a binary search using recursion (§18.5.2).
To get the directory size using recursion (§18.6).
To solve the Tower of Hanoi problem using recursion (§18.7).
To draw fractals using recursion (§18.8).
To discover the relationship and difference between recursion and iteration (§18.9).
To know tail-recursive methods and why they are desirable (§18.10).

	All recursive methods have the following characteristics:
		One or more base cases (the simplest case) are used to stop recursion.
		Every recursive call reduces the original problem, bringing it increasingly closer to a base case until it becomes that case.
	

CH 18
Obj
To describe what a recursive method is and the benefits of using recursion (§18.1).
To develop recursive methods for recursive mathematical functions (§§18.2–18.3).
To explain how recursive method calls are handled in a call stack (§§18.2–18.3).
To solve problems using recursion (§18.4).
To use an overloaded helper method to derive a recursive method (§18.5).
To implement a selection sort using recursion (§18.5.1).
To implement a binary search using recursion (§18.5.2).
To get the directory size using recursion (§18.6).
To solve the Tower of Hanoi problem using recursion (§18.7).
To draw fractals using recursion (§18.8).
To discover the relationship and difference between recursion and iteration (§18.9).
To know tail-recursive methods and why they are desirable (§18.10).